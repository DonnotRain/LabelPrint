<?xml version="1.0"?>
<configuration>
  <appSettings>
    <add key="logfile" value="@@clientlogfile@@"/>
    <add key="append" value="@@clientlogappend@@"/>
    <!--Give a number representing following bits in the filter    -->
    <!--values are ALL, FATAL, ERROR, WARNING, SUCCESS, INFO DEBUG -->
    <!--           0xFFFF, 32,  16       8       4        2    1   -->
    <!-- So  7 represents success and info an debug messages       -->
    <!-- or 48 represents only fatal and error message             -->
    <!-- for ease of use: ALL represens maxuint                    -->
    <!--                                                           -->
    <add key="loglevel" value="@@clientloglevel@@"/>
    <add key="autoflush" value="true"/>
    <add key="ClientSettingsProvider.ServiceUri" value=""/>
    <add key="SendEmail" value="True"/>
    <!-- Try to take a screenshot of the desktop on error (default true)-->
    <add key="TakeScreenshot" value="False"/>
    <!-- <appl.exe>.UnhandledException.png -->
    <!-- If SendEmail = true, also email the screenshot or not (default true)-->
    <add key="EmailScreenshot" value="False"/>
    <!-- Write the error in the application event log (default true)-->
    <add key="LogToEventLog" value="True"/>
    <!-- Log the error to a file. The file is named -->
    <!-- <appl.exe>.UnhandledExceptionLog.txt       -->
    <add key="LogToFile" value="True"/>
    <!-- Display a neat dialog to the user explaining what happened and -->
    <!-- what he needs to do -->
    <add key="DisplayDialog" value="False"/>
    <!-- When runnning in the debugger (development), skip the error handler -->
    <!-- registration if true. If false, hander is called after first chance -->
    <!-- is thrown to the debugger. Do continue to enter hander.             -->
    <add key="IgnoreDebugErrors" value="True"/>
    <!-- Kill the app on exception or try to continue. In our case, always kill -->
    <!-- Continuing might result in dataloss further on.                        -->
    <add key="KillAppOnException" value="True"/>
    <!-- overrulabe settings -->
    <!-- if other mail then mvendert@aca.nl                                       -->
    <add key="EmailTo" value="j.bosmans@aca.nl" />
    <!-- if other SMTP mail delivery server (port 25 outgoing blocked by isa etc) -->
    <!-- Default: mail.aca.nl Remember if EmailTo not aca.nl, mail.aca.nl does not-->
    <!-- relay, so other server is also required!                                 -->
    <!-- add key="EMailServer" value="Servernameofisp"-->
  </appSettings>
	<runtime>
		<generatePublisherEvidence enabled="false"/>
	</runtime>
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri=""/>
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400"/>
      </providers>
    </roleManager>
  </system.web>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/>
  </startup>
</configuration>